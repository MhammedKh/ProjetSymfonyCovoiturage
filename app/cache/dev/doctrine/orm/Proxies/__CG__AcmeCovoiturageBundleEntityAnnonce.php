<?php

namespace Proxies\__CG__\Acme\CovoiturageBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Annonce extends \Acme\CovoiturageBundle\Entity\Annonce implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array('marqueVoiture' => NULL, 'nombrePlace' => NULL, 'prixPlace' => NULL, 'dateDep' => NULL, 'heureDep' => NULL, 'lieuDep' => NULL, 'commentaire' => NULL, 'status' => NULL, 'dateIns' => NULL, 'fumeur' => NULL, 'musique' => NULL, 'discussion' => NULL, 'idUtilisateur' => NULL, 'villeArr' => NULL, 'villeDep' => NULL);



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {
        unset($this->marqueVoiture, $this->nombrePlace, $this->prixPlace, $this->dateDep, $this->heureDep, $this->lieuDep, $this->commentaire, $this->status, $this->dateIns, $this->fumeur, $this->musique, $this->discussion, $this->idUtilisateur, $this->villeArr, $this->villeDep);

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * 
     * @param string $name
     */
    public function __get($name)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', array($name));

            return $this->$name;
        }

        trigger_error(sprintf('Undefined property: %s::$%s', __CLASS__, $name), E_USER_NOTICE);
    }

    /**
     * 
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', array($name, $value));

            $this->$name = $value;

            return;
        }

        $this->$name = $value;
    }

    /**
     * 
     * @param  string $name
     * @return boolean
     */
    public function __isset($name)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__isset', array($name));

            return isset($this->$name);
        }

        return false;
    }

    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'marqueVoiture', 'nombrePlace', 'prixPlace', 'sumReserv', 'dateDep', 'heureDep', 'lieuDep', 'commentaire', 'status', 'dateIns', 'fumeur', 'musique', 'discussion', 'id', 'idUtilisateur', 'villeArr', 'villeDep', 'nbrPlacedesp');
        }

        return array('__isInitialized__', 'sumReserv', 'id', 'nbrPlacedesp');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Annonce $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

            unset($this->marqueVoiture, $this->nombrePlace, $this->prixPlace, $this->dateDep, $this->heureDep, $this->lieuDep, $this->commentaire, $this->status, $this->dateIns, $this->fumeur, $this->musique, $this->discussion, $this->idUtilisateur, $this->villeArr, $this->villeDep);
        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getVilleDep()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVilleDep', array());

        return parent::getVilleDep();
    }

    /**
     * {@inheritDoc}
     */
    public function getVilleDepString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVilleDepString', array());

        return parent::getVilleDepString();
    }

    /**
     * {@inheritDoc}
     */
    public function getVilleArr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVilleArr', array());

        return parent::getVilleArr();
    }

    /**
     * {@inheritDoc}
     */
    public function getVilleArrString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVilleArrString', array());

        return parent::getVilleArrString();
    }

    /**
     * {@inheritDoc}
     */
    public function getHeurDep()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeurDep', array());

        return parent::getHeurDep();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getNameUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNameUser', array());

        return parent::getNameUser();
    }

    /**
     * {@inheritDoc}
     */
    public function getTelUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTelUser', array());

        return parent::getTelUser();
    }

    /**
     * {@inheritDoc}
     */
    public function getDateDep()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateDep', array());

        return parent::getDateDep();
    }

    /**
     * {@inheritDoc}
     */
    public function getNbrPlace()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbrPlace', array());

        return parent::getNbrPlace();
    }

    /**
     * {@inheritDoc}
     */
    public function getPrixPlace()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrixPlace', array());

        return parent::getPrixPlace();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

}
