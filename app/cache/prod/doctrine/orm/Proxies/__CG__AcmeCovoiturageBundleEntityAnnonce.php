<?php

namespace Proxies\__CG__\Acme\CovoiturageBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Annonce extends \Acme\CovoiturageBundle\Entity\Annonce implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Acme\\CovoiturageBundle\\Entity\\Annonce' . "\0" . 'marqueVoiture', '' . "\0" . 'Acme\\CovoiturageBundle\\Entity\\Annonce' . "\0" . 'nombrePlace', '' . "\0" . 'Acme\\CovoiturageBundle\\Entity\\Annonce' . "\0" . 'prixPlace', '' . "\0" . 'Acme\\CovoiturageBundle\\Entity\\Annonce' . "\0" . 'dateDep', '' . "\0" . 'Acme\\CovoiturageBundle\\Entity\\Annonce' . "\0" . 'heureDep', '' . "\0" . 'Acme\\CovoiturageBundle\\Entity\\Annonce' . "\0" . 'villeDep', '' . "\0" . 'Acme\\CovoiturageBundle\\Entity\\Annonce' . "\0" . 'villeArr', '' . "\0" . 'Acme\\CovoiturageBundle\\Entity\\Annonce' . "\0" . 'lieuDep', '' . "\0" . 'Acme\\CovoiturageBundle\\Entity\\Annonce' . "\0" . 'commentaire', '' . "\0" . 'Acme\\CovoiturageBundle\\Entity\\Annonce' . "\0" . 'status', '' . "\0" . 'Acme\\CovoiturageBundle\\Entity\\Annonce' . "\0" . 'dateIns', '' . "\0" . 'Acme\\CovoiturageBundle\\Entity\\Annonce' . "\0" . 'fumeur', '' . "\0" . 'Acme\\CovoiturageBundle\\Entity\\Annonce' . "\0" . 'musique', '' . "\0" . 'Acme\\CovoiturageBundle\\Entity\\Annonce' . "\0" . 'discussion', '' . "\0" . 'Acme\\CovoiturageBundle\\Entity\\Annonce' . "\0" . 'id', '' . "\0" . 'Acme\\CovoiturageBundle\\Entity\\Annonce' . "\0" . 'idUtilisateur');
        }

        return array('__isInitialized__', '' . "\0" . 'Acme\\CovoiturageBundle\\Entity\\Annonce' . "\0" . 'marqueVoiture', '' . "\0" . 'Acme\\CovoiturageBundle\\Entity\\Annonce' . "\0" . 'nombrePlace', '' . "\0" . 'Acme\\CovoiturageBundle\\Entity\\Annonce' . "\0" . 'prixPlace', '' . "\0" . 'Acme\\CovoiturageBundle\\Entity\\Annonce' . "\0" . 'dateDep', '' . "\0" . 'Acme\\CovoiturageBundle\\Entity\\Annonce' . "\0" . 'heureDep', '' . "\0" . 'Acme\\CovoiturageBundle\\Entity\\Annonce' . "\0" . 'villeDep', '' . "\0" . 'Acme\\CovoiturageBundle\\Entity\\Annonce' . "\0" . 'villeArr', '' . "\0" . 'Acme\\CovoiturageBundle\\Entity\\Annonce' . "\0" . 'lieuDep', '' . "\0" . 'Acme\\CovoiturageBundle\\Entity\\Annonce' . "\0" . 'commentaire', '' . "\0" . 'Acme\\CovoiturageBundle\\Entity\\Annonce' . "\0" . 'status', '' . "\0" . 'Acme\\CovoiturageBundle\\Entity\\Annonce' . "\0" . 'dateIns', '' . "\0" . 'Acme\\CovoiturageBundle\\Entity\\Annonce' . "\0" . 'fumeur', '' . "\0" . 'Acme\\CovoiturageBundle\\Entity\\Annonce' . "\0" . 'musique', '' . "\0" . 'Acme\\CovoiturageBundle\\Entity\\Annonce' . "\0" . 'discussion', '' . "\0" . 'Acme\\CovoiturageBundle\\Entity\\Annonce' . "\0" . 'id', '' . "\0" . 'Acme\\CovoiturageBundle\\Entity\\Annonce' . "\0" . 'idUtilisateur');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Annonce $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setMarqueVoiture($marqueVoiture)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMarqueVoiture', array($marqueVoiture));

        return parent::setMarqueVoiture($marqueVoiture);
    }

    /**
     * {@inheritDoc}
     */
    public function getMarqueVoiture()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMarqueVoiture', array());

        return parent::getMarqueVoiture();
    }

    /**
     * {@inheritDoc}
     */
    public function setNombrePlace($nombrePlace)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNombrePlace', array($nombrePlace));

        return parent::setNombrePlace($nombrePlace);
    }

    /**
     * {@inheritDoc}
     */
    public function getNombrePlace()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNombrePlace', array());

        return parent::getNombrePlace();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrixPlace($prixPlace)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrixPlace', array($prixPlace));

        return parent::setPrixPlace($prixPlace);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrixPlace()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrixPlace', array());

        return parent::getPrixPlace();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateDep($dateDep)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateDep', array($dateDep));

        return parent::setDateDep($dateDep);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateDep()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateDep', array());

        return parent::getDateDep();
    }

    /**
     * {@inheritDoc}
     */
    public function setHeureDep($heureDep)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHeureDep', array($heureDep));

        return parent::setHeureDep($heureDep);
    }

    /**
     * {@inheritDoc}
     */
    public function getHeureDep()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeureDep', array());

        return parent::getHeureDep();
    }

    /**
     * {@inheritDoc}
     */
    public function setVilleDep($villeDep)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVilleDep', array($villeDep));

        return parent::setVilleDep($villeDep);
    }

    /**
     * {@inheritDoc}
     */
    public function getVilleDep()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVilleDep', array());

        return parent::getVilleDep();
    }

    /**
     * {@inheritDoc}
     */
    public function setVilleArr($villeArr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVilleArr', array($villeArr));

        return parent::setVilleArr($villeArr);
    }

    /**
     * {@inheritDoc}
     */
    public function getVilleArr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVilleArr', array());

        return parent::getVilleArr();
    }

    /**
     * {@inheritDoc}
     */
    public function setLieuDep($lieuDep)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLieuDep', array($lieuDep));

        return parent::setLieuDep($lieuDep);
    }

    /**
     * {@inheritDoc}
     */
    public function getLieuDep()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLieuDep', array());

        return parent::getLieuDep();
    }

    /**
     * {@inheritDoc}
     */
    public function setCommentaire($commentaire)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCommentaire', array($commentaire));

        return parent::setCommentaire($commentaire);
    }

    /**
     * {@inheritDoc}
     */
    public function getCommentaire()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCommentaire', array());

        return parent::getCommentaire();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateIns($dateIns)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateIns', array($dateIns));

        return parent::setDateIns($dateIns);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateIns()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateIns', array());

        return parent::getDateIns();
    }

    /**
     * {@inheritDoc}
     */
    public function setFumeur($fumeur)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFumeur', array($fumeur));

        return parent::setFumeur($fumeur);
    }

    /**
     * {@inheritDoc}
     */
    public function getFumeur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFumeur', array());

        return parent::getFumeur();
    }

    /**
     * {@inheritDoc}
     */
    public function setMusique($musique)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMusique', array($musique));

        return parent::setMusique($musique);
    }

    /**
     * {@inheritDoc}
     */
    public function getMusique()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMusique', array());

        return parent::getMusique();
    }

    /**
     * {@inheritDoc}
     */
    public function setDiscussion($discussion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDiscussion', array($discussion));

        return parent::setDiscussion($discussion);
    }

    /**
     * {@inheritDoc}
     */
    public function getDiscussion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDiscussion', array());

        return parent::getDiscussion();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdUtilisateur(\Acme\CovoiturageBundle\Entity\Utilisateur $idUtilisateur = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdUtilisateur', array($idUtilisateur));

        return parent::setIdUtilisateur($idUtilisateur);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdUtilisateur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdUtilisateur', array());

        return parent::getIdUtilisateur();
    }

}
